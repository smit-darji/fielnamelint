name: folder
on: pull_request

jobs:  
  listFiles: # Job that list  files
    runs-on: ubuntu-latest
    outputs:
      filenames: ${{ steps.folder_name_list.outputs.filenames }} # generate output name python files by using inner step output
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Get main branch
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}

      - name: Set folder 
        id: folder_name_list # Give it an id to handle to get step outputs in the outputs key above
        run: echo "::set-output name=filenames::$(git diff --name-only --diff-filter=ACMRT origin/${{ github.event.pull_request.base.ref }} )"
        # Define step output named filenames base on git diff command to find comma saperated relative paths of commited python files
      
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get modified files
      id: modified_files
      uses: trilom/file-changes-action@v1.0.0
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
    - name: Create list of modified files
      id: modified_files_list
      uses: lucaspinheirogit/list-from-string-array-action@v1.4.3
      with:
        stringArray: ${{ steps.modified_files.outputs.files_modified }}
        separator: '/'
    - name: Print modified files
      run: |
        echo '${{ steps.modified_files_list.outputs.stringList }}'
        [[ "${{ steps.modified_files_list.outputs._0 }}" == "repo" ]] || exit 1



























# name: 'folder-test'
# on: # rebuild any PRs and main branch changes
#   pull_request:
#   push:
#     branches:
#       - 'Master'

# jobs:
#   build:
#     runs-on: ubuntu-latest  # windows-latest | macos-latest
#     name: Test changed-files
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.


#       - name: Get changed files
#         id: changed-files
#         uses: tj-actions/changed-files@v26.1

#       - name: List all changed files
#         run: |
#           for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#             echo "$file was changed"
#           done
      


