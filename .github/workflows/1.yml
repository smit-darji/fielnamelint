name: Bash
on: pull_request

jobs:  
  changedFilesList: 
    runs-on: ubuntu-latest
    outputs:
      changedfiles: ${{ steps.set-changed-files.outputs.changedfiles }} # generate output names changedfiles by using inner step output
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Get main branch
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
      
      - name: Get list of changed files
        id: set-changed-files
        run: echo ::set-output name=changedfiles::$(git diff --name-only --diff-filter=ACMRT origin/${{ github.event.pull_request.base.ref }} HEAD | uniq  | jq -R -s -c 'split("\n")[:-1]' | jq -r '.[] | ("./" + .)')
      
      - name: Print files to be validated
        run: echo "${{steps.set-changed-files.outputs.changedfiles}}"

  file_and_directory_name_validator: # Job that validates files and directory names
    runs-on: ubuntu-latest
    needs: changedFilesList
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Validation
        env:
          CHANGED_FILES: ${{ needs.changedFilesList.outputs.changedfiles }}
        run: |
          python ./1234_YOGESH_TEST_12T.py 

  job:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [file_and_directory_name_validator]
    name: Annotates pull request with metadata
    steps:
      - name: Annotate PR
        uses: smit-darji/PR-metadata-action@Master
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          pr_number: ${{ github.event.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          run : |
            ehco ${{outputvar}}
            print(file_name) 
          
